// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// UpdateUserProfileHandlerFunc turns a function with the right signature into a update user profile handler
type UpdateUserProfileHandlerFunc func(UpdateUserProfileParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UpdateUserProfileHandlerFunc) Handle(params UpdateUserProfileParams) middleware.Responder {
	return fn(params)
}

// UpdateUserProfileHandler interface for that can handle valid update user profile params
type UpdateUserProfileHandler interface {
	Handle(UpdateUserProfileParams) middleware.Responder
}

// NewUpdateUserProfile creates a new http.Handler for the update user profile operation
func NewUpdateUserProfile(ctx *middleware.Context, handler UpdateUserProfileHandler) *UpdateUserProfile {
	return &UpdateUserProfile{Context: ctx, Handler: handler}
}

/* UpdateUserProfile swagger:route PUT /users/profile user updateUserProfile

update user profile

*/
type UpdateUserProfile struct {
	Context *middleware.Context
	Handler UpdateUserProfileHandler
}

func (o *UpdateUserProfile) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewUpdateUserProfileParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// UpdateUserProfileBody update user profile body
//
// swagger:model UpdateUserProfileBody
type UpdateUserProfileBody struct {

	// city
	City string `json:"city,omitempty"`

	// company name
	CompanyName string `json:"companyName,omitempty"`

	// country
	Country string `json:"country,omitempty"`

	// email
	Email string `json:"email,omitempty"`

	// first name
	FirstName string `json:"firstName,omitempty"`

	// last name
	LastName string `json:"lastName,omitempty"`

	// phone
	Phone string `json:"phone,omitempty"`

	// position
	Position string `json:"position,omitempty"`
}

// Validate validates this update user profile body
func (o *UpdateUserProfileBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this update user profile body based on context it is used
func (o *UpdateUserProfileBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UpdateUserProfileBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateUserProfileBody) UnmarshalBinary(b []byte) error {
	var res UpdateUserProfileBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// UpdateUserProfileNotFoundBody update user profile not found body
//
// swagger:model UpdateUserProfileNotFoundBody
type UpdateUserProfileNotFoundBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this update user profile not found body
func (o *UpdateUserProfileNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this update user profile not found body based on context it is used
func (o *UpdateUserProfileNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UpdateUserProfileNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateUserProfileNotFoundBody) UnmarshalBinary(b []byte) error {
	var res UpdateUserProfileNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// UpdateUserProfileOKBody update user profile o k body
//
// swagger:model UpdateUserProfileOKBody
type UpdateUserProfileOKBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this update user profile o k body
func (o *UpdateUserProfileOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this update user profile o k body based on context it is used
func (o *UpdateUserProfileOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UpdateUserProfileOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateUserProfileOKBody) UnmarshalBinary(b []byte) error {
	var res UpdateUserProfileOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
