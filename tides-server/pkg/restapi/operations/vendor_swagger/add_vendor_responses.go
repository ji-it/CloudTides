// Code generated by go-swagger; DO NOT EDIT.

package vendor_swagger

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// AddVendorOKCode is the HTTP code returned for type AddVendorOK
const AddVendorOKCode int = 200

/*AddVendorOK OK

swagger:response addVendorOK
*/
type AddVendorOK struct {

	/*
	  In: Body
	*/
	Payload *AddVendorOKBody `json:"body,omitempty"`
}

// NewAddVendorOK creates AddVendorOK with default headers values
func NewAddVendorOK() *AddVendorOK {

	return &AddVendorOK{}
}

// WithPayload adds the payload to the add vendor o k response
func (o *AddVendorOK) WithPayload(payload *AddVendorOKBody) *AddVendorOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add vendor o k response
func (o *AddVendorOK) SetPayload(payload *AddVendorOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddVendorOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddVendorBadRequestCode is the HTTP code returned for type AddVendorBadRequest
const AddVendorBadRequestCode int = 400

/*AddVendorBadRequest bad request

swagger:response addVendorBadRequest
*/
type AddVendorBadRequest struct {
}

// NewAddVendorBadRequest creates AddVendorBadRequest with default headers values
func NewAddVendorBadRequest() *AddVendorBadRequest {

	return &AddVendorBadRequest{}
}

// WriteResponse to the client
func (o *AddVendorBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// AddVendorUnauthorizedCode is the HTTP code returned for type AddVendorUnauthorized
const AddVendorUnauthorizedCode int = 401

/*AddVendorUnauthorized Unauthorized

swagger:response addVendorUnauthorized
*/
type AddVendorUnauthorized struct {
}

// NewAddVendorUnauthorized creates AddVendorUnauthorized with default headers values
func NewAddVendorUnauthorized() *AddVendorUnauthorized {

	return &AddVendorUnauthorized{}
}

// WriteResponse to the client
func (o *AddVendorUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// AddVendorNotFoundCode is the HTTP code returned for type AddVendorNotFound
const AddVendorNotFoundCode int = 404

/*AddVendorNotFound resource not found

swagger:response addVendorNotFound
*/
type AddVendorNotFound struct {

	/*
	  In: Body
	*/
	Payload *AddVendorNotFoundBody `json:"body,omitempty"`
}

// NewAddVendorNotFound creates AddVendorNotFound with default headers values
func NewAddVendorNotFound() *AddVendorNotFound {

	return &AddVendorNotFound{}
}

// WithPayload adds the payload to the add vendor not found response
func (o *AddVendorNotFound) WithPayload(payload *AddVendorNotFoundBody) *AddVendorNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add vendor not found response
func (o *AddVendorNotFound) SetPayload(payload *AddVendorNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddVendorNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
