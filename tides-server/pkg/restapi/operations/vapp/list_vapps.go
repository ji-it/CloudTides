// Code generated by go-swagger; DO NOT EDIT.

package vapp

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ListVappsHandlerFunc turns a function with the right signature into a list vapps handler
type ListVappsHandlerFunc func(ListVappsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ListVappsHandlerFunc) Handle(params ListVappsParams) middleware.Responder {
	return fn(params)
}

// ListVappsHandler interface for that can handle valid list vapps params
type ListVappsHandler interface {
	Handle(ListVappsParams) middleware.Responder
}

// NewListVapps creates a new http.Handler for the list vapps operation
func NewListVapps(ctx *middleware.Context, handler ListVappsHandler) *ListVapps {
	return &ListVapps{Context: ctx, Handler: handler}
}

/* ListVapps swagger:route GET /vapp vapp listVapps

list Vapps

*/
type ListVapps struct {
	Context *middleware.Context
	Handler ListVappsHandler
}

func (o *ListVapps) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewListVappsParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// ListVappsOKBodyItems0 list vapps o k body items0
//
// swagger:model ListVappsOKBodyItems0
type ListVappsOKBodyItems0 struct {

	// datacenter
	Datacenter string `json:"datacenter,omitempty"`

	// id
	ID int64 `json:"id,omitempty"`

	// ipaddress
	Ipaddress string `json:"ipaddress,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// powered on
	PoweredOn bool `json:"poweredOn,omitempty"`

	// status
	Status string `json:"status,omitempty"`

	// template
	Template string `json:"template,omitempty"`

	// vendor
	Vendor string `json:"vendor,omitempty"`
}

// Validate validates this list vapps o k body items0
func (o *ListVappsOKBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this list vapps o k body items0 based on context it is used
func (o *ListVappsOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListVappsOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListVappsOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res ListVappsOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
