// Code generated by go-swagger; DO NOT EDIT.

package vmtemp

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ListVMTempHandlerFunc turns a function with the right signature into a list VM temp handler
type ListVMTempHandlerFunc func(ListVMTempParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ListVMTempHandlerFunc) Handle(params ListVMTempParams) middleware.Responder {
	return fn(params)
}

// ListVMTempHandler interface for that can handle valid list VM temp params
type ListVMTempHandler interface {
	Handle(ListVMTempParams) middleware.Responder
}

// NewListVMTemp creates a new http.Handler for the list VM temp operation
func NewListVMTemp(ctx *middleware.Context, handler ListVMTempHandler) *ListVMTemp {
	return &ListVMTemp{Context: ctx, Handler: handler}
}

/* ListVMTemp swagger:route GET /template/vmtemp/{id} vmtemp listVmTemp

list VMtemplate

*/
type ListVMTemp struct {
	Context *middleware.Context
	Handler ListVMTempHandler
}

func (o *ListVMTemp) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewListVMTempParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// ListVMTempOKBodyItems0 list VM temp o k body items0
//
// swagger:model ListVMTempOKBodyItems0
type ListVMTempOKBodyItems0 struct {

	// disk
	Disk int64 `json:"disk,omitempty"`

	// id
	ID int64 `json:"id,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// ports
	Ports string `json:"ports,omitempty"`

	// vcpu
	Vcpu int64 `json:"vcpu,omitempty"`

	// vmem
	Vmem int64 `json:"vmem,omitempty"`
}

// Validate validates this list VM temp o k body items0
func (o *ListVMTempOKBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this list VM temp o k body items0 based on context it is used
func (o *ListVMTempOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListVMTempOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListVMTempOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res ListVMTempOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
