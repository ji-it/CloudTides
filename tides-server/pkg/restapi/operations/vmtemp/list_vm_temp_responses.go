// Code generated by go-swagger; DO NOT EDIT.

package vmtemp

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// ListVMTempOKCode is the HTTP code returned for type ListVMTempOK
const ListVMTempOKCode int = 200

/*ListVMTempOK OK

swagger:response listVmTempOK
*/
type ListVMTempOK struct {

	/*
	  In: Body
	*/
	Payload []*ListVMTempOKBodyItems0 `json:"body,omitempty"`
}

// NewListVMTempOK creates ListVMTempOK with default headers values
func NewListVMTempOK() *ListVMTempOK {

	return &ListVMTempOK{}
}

// WithPayload adds the payload to the list Vm temp o k response
func (o *ListVMTempOK) WithPayload(payload []*ListVMTempOKBodyItems0) *ListVMTempOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list Vm temp o k response
func (o *ListVMTempOK) SetPayload(payload []*ListVMTempOKBodyItems0) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListVMTempOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*ListVMTempOKBodyItems0, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ListVMTempUnauthorizedCode is the HTTP code returned for type ListVMTempUnauthorized
const ListVMTempUnauthorizedCode int = 401

/*ListVMTempUnauthorized Unauthorized

swagger:response listVmTempUnauthorized
*/
type ListVMTempUnauthorized struct {
}

// NewListVMTempUnauthorized creates ListVMTempUnauthorized with default headers values
func NewListVMTempUnauthorized() *ListVMTempUnauthorized {

	return &ListVMTempUnauthorized{}
}

// WriteResponse to the client
func (o *ListVMTempUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}
