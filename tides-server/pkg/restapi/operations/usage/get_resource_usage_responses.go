// Code generated by go-swagger; DO NOT EDIT.

package usage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetResourceUsageOKCode is the HTTP code returned for type GetResourceUsageOK
const GetResourceUsageOKCode int = 200

/*GetResourceUsageOK success

swagger:response getResourceUsageOK
*/
type GetResourceUsageOK struct {

	/*
	  In: Body
	*/
	Payload *GetResourceUsageOKBody `json:"body,omitempty"`
}

// NewGetResourceUsageOK creates GetResourceUsageOK with default headers values
func NewGetResourceUsageOK() *GetResourceUsageOK {

	return &GetResourceUsageOK{}
}

// WithPayload adds the payload to the get resource usage o k response
func (o *GetResourceUsageOK) WithPayload(payload *GetResourceUsageOKBody) *GetResourceUsageOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get resource usage o k response
func (o *GetResourceUsageOK) SetPayload(payload *GetResourceUsageOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetResourceUsageOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetResourceUsageBadRequestCode is the HTTP code returned for type GetResourceUsageBadRequest
const GetResourceUsageBadRequestCode int = 400

/*GetResourceUsageBadRequest bad request

swagger:response getResourceUsageBadRequest
*/
type GetResourceUsageBadRequest struct {
}

// NewGetResourceUsageBadRequest creates GetResourceUsageBadRequest with default headers values
func NewGetResourceUsageBadRequest() *GetResourceUsageBadRequest {

	return &GetResourceUsageBadRequest{}
}

// WriteResponse to the client
func (o *GetResourceUsageBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// GetResourceUsageNotFoundCode is the HTTP code returned for type GetResourceUsageNotFound
const GetResourceUsageNotFoundCode int = 404

/*GetResourceUsageNotFound resource not found

swagger:response getResourceUsageNotFound
*/
type GetResourceUsageNotFound struct {

	/*
	  In: Body
	*/
	Payload *GetResourceUsageNotFoundBody `json:"body,omitempty"`
}

// NewGetResourceUsageNotFound creates GetResourceUsageNotFound with default headers values
func NewGetResourceUsageNotFound() *GetResourceUsageNotFound {

	return &GetResourceUsageNotFound{}
}

// WithPayload adds the payload to the get resource usage not found response
func (o *GetResourceUsageNotFound) WithPayload(payload *GetResourceUsageNotFoundBody) *GetResourceUsageNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get resource usage not found response
func (o *GetResourceUsageNotFound) SetPayload(payload *GetResourceUsageNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetResourceUsageNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
