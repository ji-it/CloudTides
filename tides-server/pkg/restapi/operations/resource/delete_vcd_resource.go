// Code generated by go-swagger; DO NOT EDIT.

package resource

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DeleteVcdResourceHandlerFunc turns a function with the right signature into a delete vcd resource handler
type DeleteVcdResourceHandlerFunc func(DeleteVcdResourceParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteVcdResourceHandlerFunc) Handle(params DeleteVcdResourceParams) middleware.Responder {
	return fn(params)
}

// DeleteVcdResourceHandler interface for that can handle valid delete vcd resource params
type DeleteVcdResourceHandler interface {
	Handle(DeleteVcdResourceParams) middleware.Responder
}

// NewDeleteVcdResource creates a new http.Handler for the delete vcd resource operation
func NewDeleteVcdResource(ctx *middleware.Context, handler DeleteVcdResourceHandler) *DeleteVcdResource {
	return &DeleteVcdResource{Context: ctx, Handler: handler}
}

/* DeleteVcdResource swagger:route DELETE /resource/vcd/{id} resource deleteVcdResource

delete vcd resource

*/
type DeleteVcdResource struct {
	Context *middleware.Context
	Handler DeleteVcdResourceHandler
}

func (o *DeleteVcdResource) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeleteVcdResourceParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// DeleteVcdResourceNotFoundBody delete vcd resource not found body
//
// swagger:model DeleteVcdResourceNotFoundBody
type DeleteVcdResourceNotFoundBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this delete vcd resource not found body
func (o *DeleteVcdResourceNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this delete vcd resource not found body based on context it is used
func (o *DeleteVcdResourceNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteVcdResourceNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteVcdResourceNotFoundBody) UnmarshalBinary(b []byte) error {
	var res DeleteVcdResourceNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// DeleteVcdResourceOKBody delete vcd resource o k body
//
// swagger:model DeleteVcdResourceOKBody
type DeleteVcdResourceOKBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this delete vcd resource o k body
func (o *DeleteVcdResourceOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this delete vcd resource o k body based on context it is used
func (o *DeleteVcdResourceOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteVcdResourceOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteVcdResourceOKBody) UnmarshalBinary(b []byte) error {
	var res DeleteVcdResourceOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
