// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ListProjectHandlerFunc turns a function with the right signature into a list project handler
type ListProjectHandlerFunc func(ListProjectParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ListProjectHandlerFunc) Handle(params ListProjectParams) middleware.Responder {
	return fn(params)
}

// ListProjectHandler interface for that can handle valid list project params
type ListProjectHandler interface {
	Handle(ListProjectParams) middleware.Responder
}

// NewListProject creates a new http.Handler for the list project operation
func NewListProject(ctx *middleware.Context, handler ListProjectHandler) *ListProject {
	return &ListProject{Context: ctx, Handler: handler}
}

/* ListProject swagger:route GET /project project listProject

list boinc projects

*/
type ListProject struct {
	Context *middleware.Context
	Handler ListProjectHandler
}

func (o *ListProject) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewListProjectParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// ListProjectOKBodyItems0 list project o k body items0
//
// swagger:model ListProjectOKBodyItems0
type ListProjectOKBodyItems0 struct {

	// ID
	ID int64 `json:"ID,omitempty"`

	// has account manager
	HasAccountManager bool `json:"hasAccountManager,omitempty"`

	// project name
	ProjectName string `json:"projectName,omitempty"`

	// url
	URL string `json:"url,omitempty"`
}

// Validate validates this list project o k body items0
func (o *ListProjectOKBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this list project o k body items0 based on context it is used
func (o *ListProjectOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListProjectOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListProjectOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res ListProjectOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
