name: CloudTides Server

on:
  push:
    branches:
      - 'master'
    paths:
      - 'tides-server/**'
  pull_request:
    branches:
      - 'master'
    paths:
      - 'tides-server/**'

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.13
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          cd tides-server
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi
        env:
          GO111MODULE: on

      - name: Build
        run: |
          cd tides-server/cmd
          go build -v .
        env:
          GO111MODULE: on

  test:
    name: Check
    runs-on: ubuntu-latest
    steps:

      - name: Check out source
        uses: actions/checkout@v2

      - name: gofmt
        run: |
          cd tides-server
          # output files that doesn't conform to the format specification
          ls -p | grep -v vendor | grep -v swagger | grep "/$" | xargs gofmt -l -s
          # optional: failure to comply with the specification forces the task to fail
          # exit $(ls -p | grep -v vendor | grep -v swagger | grep "/$" | xargs gofmt -l -s | wc -l)

      - name: gotest
        run: |
          cd tides-server
          go test ./...
  
  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs: [build, test]
    runs-on: ubuntu-latest
    steps:

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: ericshen97/cloudtides_backend
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          workdir: tides-server
          tags: "latest"

      - name: Transfer yml file to Aliyun
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          source: "tides-server/cloudtides_backend.yml"
          target: "/root"

      - name: Upgrade the platform using SSH
        uses: fifsky/ssh-action@master
        with:
          command: |
            cd /root/tides-server
            kubectl delete -f cloudtides_backend.yml
            kubectl apply -f cloudtides_backend.yml
          host: ${{ secrets.REMOTE_HOST }}
          user: ${{ secrets.REMOTE_USER }}
          pass: ${{ secrets.SSH_PASSWORD }}

#      - name: golangci-lint
#        uses: golangci/golangci-lint-action@v1
#        with:
#          version: v1.26
#          working-directory: tides-server
